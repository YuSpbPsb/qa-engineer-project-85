---
#
- summary: |
    Создание игры без регистрации
  requirement: |
    Пользователь должен иметь возможность создавать игры без регистрации
  prerequisites: |
    no data
  test-data: |
    no data
  steps:
    - Нажимаем кнопку "TRY SIMPLE BATTLE"    
  expected-result: |
    Игра без регистрации успешно создана.
#
- summary: |
     Регистрация по email
  requirement: |
    Пользователь должен иметь возможность зарегестрироваться
  prerequisites:
    no data
  test-data: |
    no data
  steps:
    - Нажимаем кнопку "Sing up"
    - Вводим Nickname; Email; Password; Password Confirmation; 
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь успешно зарегистрирован
#
- summary: |
    Авторизации пользователя по email
  requirement: |
    Пользователь должен иметь возможность авторизоваться
  prerequisites:
    no data
  test-data: |
    Email = codebatt_test_1234@tutamail.com;  Password = n3$TaGM4G8Se!)@;
  steps:
    - Нажимаем кнопку "Sing in"
    - Вводим пароль и email
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь успешно авторизован
#
- summary: |
    Восстановление пароля по email
  requirement: |
    Пользователь должен иметь возможность восстановления пароля по email
  prerequisites:
    no data
  test-data: |
    Email = codebatt_test_1234@tutamail.com Password = n3$TaGM4G8Se!)@
  steps:
    - Нажимаем кнопку "Sing in"
    - Нажимаем кнопку "Forgot your password?" 
    - Вводим Email
    - Нажимаем кнопку «Submit»
    - В почте находим письмо от Codebattle и переходим по ссылке для восстановления
    - Вводим Password  в поле "New password"
    - Нажимаем кнопку «Save»
  expected-result: |
    Новый пароль для аккаунта установлен
#
- summary: |
    Проверка авторизации незарегистрированного пользователя
  requirement: |
    Пользователь не может авторизоваться под ранее незарегистрированной почтой
  prerequisites: |
    empty
  test-data: |
    Email = nodata@nodata.nodata Password = not_password
  steps: 
    - Нажать на кнопку "Sign in"
    - Ввести Email
    - Ввести Password
    - Нажать на Submit
  expected-result: |
    Авторизация не произошла, пользователь увидел сообщение об ошибке
#
- summary: |
    Проверка авторизации по аккаунту в Github
  requirement: |
    Пользователь должен иметь возможность авторизоваться
  prerequisites: | 
    На устройстве/в браузере есть авторизованный аккаунт Github
  test-data: |
    no data
  steps:
    - Нажимаем кнопку "Sing in"
    - Нажимаем кнопку "Sing in with Github"
    - В окне подтверждения нажимаем кнопку "Авторизоваться"        
  expected-result: |
    Пользователь успешно авторизован
#
- summary: |
    Проверка авторизации по аккаунту в Discord
  requirement: |
    Пользователь должен иметь возможность авторизоваться
  prerequisites: | 
    На устройстве/в браузере есть авторизованный аккаунт Discord
  test-data: |
    no data
  steps:
    - Нажимаем кнопку "Sing in"
    - Нажимаем кнопку "Sing in with Discord"
    - В окне подтверждения нажимаем кнопку "Авторизоваться"   
  expected-result: |
    Пользователь успешно авторизован
#
- summary: |
    Проверка создания игры с ботом
  requirement: |
    Пользователь должен иметь возможность создавать игры c другими пользователями/друзьями/ботами
  prerequisites: | 
    Пользователь авторизован
  test-data: |
    no data
  steps:
    - Нажимаем кнопку "CREATE A GAME"
    - Выбираем игру с ботом, оставляя остальные условия по умолчанию.
    - Нажимаем кнопку "Create battle"    
  expected-result: |
    Игра с ботом успешно создана
#
- summary: |
    Проверка создания игры с друзьями
  requirement: |
    Пользователь должен иметь возможность создавать игры c другими пользователями/друзьями/ботами
  prerequisites: |
    На устройстве/в браузере есть авторизованный аккаунт Discord или Github    
    Открыто две вкладки https://codebattle.hexlet.io/ в разных браузерах, на пример в Crome и Firefox
  test-data: |
    Email = codebatt_test_1234@tutamail.com Password = n3$TaGM4G8Se!)@
  steps:
    - В первой вкладке авторизуемся через Email
    - В первой вкладке авторизуемся через Discord или Github
    - В первой вкладке нажимаем кнопку "CREATE A GAME"    
    - Выбираем Game Type - With a friend
    - Остальные параметры выбираем произвольным образом
    - Нажимаем кнопку "Create invite"
    - Во второй вкладке нажимаем на иконку мечей("Invites")
    - В модальном окне подтверждаем приглашение нажатием на кнопку "Accept" 
  expected-result: |
    Игра начинается у обоих пользователей
#
- summary: |
    Проверка создания игры с другими пользователями
  requirement: |
    Пользователь должен иметь возможность создавать игры c другими пользователями/друзьями/ботами
  prerequisites: |
    На устройстве/в браузере есть авторизованный аккаунт Discord или Github     
    Открыто две вкладки https://codebattle.hexlet.io/ в разных браузерах, на пример в Crome и Firefox 
  test-data: |
    Email = codebatt_test_1234@tutamail.com Password = n3$TaGM4G8Se!)@    
  steps:
    - В первой вкладке авторизуемся через Email
    - В первой вкладке авторизуемся через Discord или Github
    - В первой вкладке нажимаем кнопку "CREATE A GAME"    
    - Выбираем Game Type - With other user
    - Остальные параметры выбираем произвольным образом
    - Нажимаем кнопку "Create battle"
    - Во второй вкладке находим созданную в первой вкладке игру в списке "LOBBY"
    - Нажимаем на кнопку "Figth" 
  expected-result: |
    Игра начинается у обоих пользователей
#
- summary: |
    Создание турнира
  requirement: |
    Пользователь должен иметь возможность создавать турнир
  prerequisites: |
    Пользователь авторизован
  test-data: |
    no data
  steps:
    - Нажимаем на профиль
    - В выпадающем списке нажимаем на кнопку "Tournaments"
    - Находим форму "Create a new tournament" 
    - Выбираем Access type - token
    - Остальные параметры выбираем произвольным образом либо оставляем по умолчанию
    - Нажимаем кнопку "Create"    
  expected-result: |
    Турнир создан
#
- summary: |
    Проверка возможности победы пользователя в игре
  requirement: |
    Пользователь должен иметь возможность создавать игры c другими пользователями/друзьями/ботами
  prerequisites: | 
    Пользователь авторизован
  test-data: |
    Код: qa-engineer-project-85\assets\game_with_bot_1.md
  steps:
    - Нажимаем кнопку "CREATE A GAME"  
    - Выбираем Game Type - With a bot    
    - Выбираем Chose task by name or tags - react_area
    - Остальные параметры оставляем по умолчанию
    - Нажимаем кнопку "Create battle"
    - Выбираем язык - Node.js
    - Встввляем подготовленный код в редактор
    - Нажимаем "Run"
  expected-result: |
    Игра с ботом успешно создана, пользователь побеждает
#
- summary: |
    Проверка возможности сдаться в игре
  requirement: |
    Пользователь должен иметь возможность создавать игры c другими пользователями/друзьями/ботами
  prerequisites: | 
    Пользователь авторизован
  test-data: |
    no data
  steps:
    - Нажимаем кнопку "CREATE A GAME"   
    - Выбираем Game Type - With a bot
    - Остальные параметры оставляем по умолчанию
    - Нажимаем кнопку "Create battle"
    - Нажимаем кнопку "Give Up"/ красный флаг
    - Нажимаем кнопку "Give Up" в окне подтверждения
  expected-result: |
    Игра с ботом успешно создана, пользователь сдается и пороигрывает
#
- summary: |
    Проверка выбора языка программирования в активной игре
  requirement: |
    Пользователь может выбрать язык для решения задачи в игре
  prerequisites: |
    no data
  test-data: |
    no data
  steps: 
    - Создать игру, например, с ботом
    - В игре в выпадающем меню выбрать любой язык программирования, например, C#
  expected-result: |
    Язык программирования сменился на выбранный
#
- summary: |
    Изменение имени профиля и языка программирования по умолчанию
  requirement: |
    Пользователь должен иметь возможность настройки профиля
  prerequisites: |
    Пользователь авторизован
  test-data: |
    no data
  steps: 
    - Нажимаем на профиль
    - В выпадающем списке нажимаем на кнопку "Settings"
    - Заполняем поле "Your name" произвольным образом, на пример test_test_1
    - Выбираем язык программирования в списке "Your weapon", на пример Elixir
    - Нажимаем кнопку Save
    - Нажимаем на профиль
    - В выпадающем списке нажимаем на кнопку "My Profile"
  expected-result: |
    Настройки профиля изменились
#
- summary: |
    Просмотр игры других пользователей
  requirement: |
    Пользователь может наблюдать за игрой других пользователей в реальном времени
  prerequisites: |
    Пользователь авторизован
  test-data: |
    no data
  steps: 
    - В списке активных игр нажать на кнопку "Show"
  expected-result: |
    Пользователь наблюдает за выбранной игрой
#
- summary: |
    Сортировка пользователей в таблице рейтинга
  requirement: |
    Пользователь должен иметь возможность сортировки других пользователей в таблице рейтинга
  prerequisites: |
    Пользователь авторизован
  test-data: |
    no data
  steps: 
    - В меню пользователя выбрать "Users rating"
    - Выбрать любой раздел, на пример "weekly"
    - Отсортировать по любому полю, например "Rank" по убыванию
  expected-result: |
    Пользователи отсортированны по укзанному полю по убыванию
---
#примеры
- summary: |
    Краткое описание тест-кейса. Пример: Проверка входа пользователя с существующими логином и паролем
  requirement: |
    Тестируемое требование. Например: При верном вводе логине и пароля пользователь должен войти в систему
  prerequisites: |
    Это условия, которые необходимы для проведения тест-кейса. Они должны быть выполнены еще до запуска тест-кейса.
    Например: открыта страница логина
  test-data: |
    Тестовые данные
    Логин = ilona Пароль = password
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Войти»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка входа пользователя с несуществующими логином и паролем
  requirement: |
    При неправильном логине или пароле пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница логина
  test-data: |
    Логин = Логин = hexlet Пароль = badpass
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Войти»
  expected-result: |
    Пользователь должен получить сообщение об ошибке
#примеры
- summary: |
    Возможность создание игры без регистрации
  requirement: |
    Пользователь должен иметь возможность создавать игры без регистрации
  prerequisites: |
    no data
  test-data: |
    no data
  steps:
    - Нажимаем кнопку "TRY SIMPLE BATTLE"    
  expected-result: |
    Пользователь должен попасть на случайную подготовленную игру с ботом.
#
- summary: |
    Проверка регистрации пользователя 
  requirement: |
    Пользователь должен иметь возможность зарегестрироваться
  prerequisites:
    no data
  test-data: |
    Email = codebatt_test_1234@tutamail.com;  Password = n3$TaGM4G8Se!)@;
  steps:
    - Нажимаем кнопку "Sing in"
    - Вводим пароль и email
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь попадает на главную страницу
#
- summary: |
     Проверка регистрации по email
  requirement: |
    Пользователь должен иметь возможность зарегестрироваться
  prerequisites:
    no data
  test-data: |
    Nickname = test_user1234; Email = берём с сайта: https://temp-mail.org;  Password = n3$TaGM4G8Se!)@; Password Confirmation = n3$TaGM4G8Se!)@
  steps:
    - Нажимаем кнопку "Sing up"
    - Вводим Nickname; Email; Password; Password Confirmation 
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь попадает на главную страницу
#
- summary: |
    Проверка авторизации по аккаунту в Github
  requirement: |
    Пользователь должен иметь возможность авторизоваться
  prerequisites: | 
    На устройстве/в браузере есть авторизованный аккаунт Github
  test-data: |
    no data
  steps:
    - Нажимаем кнопку "Sing in"
    - Нажимаем кнопку "Sing in with Github"
    - В окне подтверждения нажимаем кнопку "Авторизоваться"        
  expected-result: |
    Пользователь попадает на главную страницу
#
- summary: |
    Проверка авторизации по аккаунту в Discord
  requirement: |
    Пользователь должен иметь возможность авторизоваться
  prerequisites: | 
    На устройстве/в браузере есть авторизованный аккаунт Discord
  test-data: |
    no data
  steps:
    - Нажимаем кнопку "Sing in"
    - Нажимаем кнопку "Sing in with Discord"
    - В окне подтверждения нажимаем кнопку "Авторизоваться"   
  expected-result: |
    Пользователь попадает на главную страницу
#
- summary: |
    
  requirement: |
    Пользователь должен иметь возможность создавать игры
  prerequisites: | 
    Пользователь авторизован
  test-data: |
    Код: qa-engineer-project-85\assets\game_with_bot_1.md
  steps:
    - Нажимаем кнопку "CREATE A GAME"
    - Выбираем Level - 1
    - Выбираем Game Type - With a bot
    - Выбираем Time control - 10 min
    - Выбираем Chose task by name or tags - react_area
    - Нажимаем кнопку "Create battle"
    - Выбираем язык - Node.js
    - Встввляем подготовленный код в редактор
    - Нажимаем "Run"
  expected-result: |
    Игра с ботом запускается